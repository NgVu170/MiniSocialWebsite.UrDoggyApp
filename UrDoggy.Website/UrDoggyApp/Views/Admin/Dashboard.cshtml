@model dynamic
@inject UrDoggy.Services.Interfaces.IUserService UserService
@inject UrDoggy.Services.Interfaces.IPostService PostService

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_Layout";

    var users = (List<UrDoggy.Core.Models.User>)ViewBag.Users;
    var posts = (List<UrDoggy.Core.Models.Post>)ViewBag.Posts;
    var reports = (List<UrDoggy.Core.Models.Report>)ViewBag.Reports;
}

<style>
    /* Admin Dashboard Style */
    :root {
        --admin-primary: #2d3436;
        --admin-accent: #00b894;
        --admin-danger: #e74c3c;
        --admin-bg: #f8f9fa;
        --admin-card: #ffffff;
    }

    body {
        background: var(--admin-bg);
    }

    h2 {
        color: var(--admin-primary);
        font-weight: 700;
        border-left: 5px solid var(--admin-accent);
        padding-left: 1rem;
        margin: 2rem 0;
    }

    /* Stats Cards - Modern Gradient */
    .card {
        border: none;
        border-radius: 1.5rem;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .bg-primary {
        background: linear-gradient(135deg, #25D366 0%, #0984e3 100%) !important;
    }

    .bg-success {
        background: linear-gradient(135deg, #00b894 0%, #0984e3 100%) !important;
    }

    .bg-warning {
        background: linear-gradient(135deg, #f1c40f 0%, #e67e22 100%) !important;
    }

    .card-title {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
        gap: 0.8rem;
    }

        .card-title:before {
            content: "";
            display: inline-block;
            width: 30px;
            height: 30px;
            background: rgba(255, 255, 255, 0.2);
            mask-size: contain;
            -webkit-mask-size: contain;
        }

    .bg-primary .card-title:before {
        mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M12 4a4 4 0 0 1 4 4a4 4 0 0 1-4 4a4 4 0 0 1-4-4a4 4 0 0 1 4-4m0 10c4.42 0 8 1.79 8 4v2H4v-2c0-2.21 3.58-4 8-4'/%3E%3C/svg%3E");
    }

    .bg-success .card-title:before {
        mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M17 9H7V7h10m0 6H7v-2h10m-3 6H7v-2h7M12 3a1 1 0 0 1 1 1a1 1 0 0 1-1 1a1 1 0 0 1-1-1a1 1 0 0 1 1-1m7 0h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2'/%3E%3C/svg%3E");
    }

    .bg-warning .card-title:before {
        mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M12 2L1 21h22M12 6l7.53 13H4.47M11 10v4h2v-4m-2 6v2h2v-2'/%3E%3C/svg%3E");
    }

    /* Modern Tabs */
    .nav-tabs {
        border-bottom: 2px solid rgba(0, 0, 0, 0.05);
    }

    .nav-link {
        border: none !important;
        color: var(--admin-primary) !important;
        position: relative;
        padding: 1rem 2rem;
    }

        .nav-link.active:after {
            content: "";
            position: absolute;
            bottom: -2px;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--admin-accent);
            border-radius: 2px;
        }

    /* Advanced Table Design */
    .table {
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
    }

        .table thead {
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-bottom: 2px solid var(--admin-accent);
        }

        .table th {
            font-weight: 600;
            color: var(--admin-primary);
            padding: 1.2rem;
        }

        .table td {
            padding: 1rem;
            vertical-align: middle;
            border-color: rgba(0, 0, 0, 0.03) !important;
        }

        .table tr {
            transition: background 0.2s ease;
        }

            .table tr:hover {
                background: rgba(0, 184, 148, 0.03) !important;
            }

    .btn-danger {
        background: var(--admin-danger) !important;
        border: none !important;
        padding: 0.5rem 1.5rem !important;
        border-radius: 0.75rem !important;
        transition: all 0.2s ease !important;
    }

        .btn-danger:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(231, 76, 60, 0.2);
        }

    @@media (max-width: 768px) {
        .card {
            margin-bottom: 1.5rem;
        }

        .table-responsive {
            border-radius: 1rem;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }
    }
</style>


<h2>Admin Dashboard</h2>
<hr />

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-primary">
            <div class="card-body">
                <h5 class="card-title">Users</h5>
                <p class="card-text display-4">@ViewBag.UserCount</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-success">
            <div class="card-body">
                <h5 class="card-title">Posts</h5>
                <p class="card-text display-4">@ViewBag.PostCount</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-warning">
            <div class="card-body">
                <h5 class="card-title">Reports</h5>
                <p class="card-text display-4">@ViewBag.ReportCount</p>
            </div>
        </div>
    </div>
</div>

<ul class="nav nav-tabs mb-3" id="adminTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#users">Users</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#posts">Posts</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#reports">Reports</button>
    </li>
</ul>

<div class="tab-content" id="adminTabsContent">
    <div class="tab-pane fade show active" id="users">
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Joined</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var u in users)
                {
                    <tr>
                        <td>@u.Id</td>
                        <td>
                            <a asp-controller="Profile" asp-action="Index" asp-route-id="@u.Id">
                                @u.UserName
                            </a>
                        </td>
                        <td>@u.Email</td>
                        <td>@u.CreatedAt.ToString("yyyy-MM-dd")</td>
                        <td>
                            <form asp-controller="Admin" asp-action="DeleteUser" method="post"
                                  onsubmit="return confirm('Delete user @u.UserName?');">
                                @Html.AntiForgeryToken()
                                <input name="id" type="hidden" value="@u.Id" />
                                <button class="btn btn-sm btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="tab-pane fade" id="posts">
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Author</th>
                    <th>Content</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in posts)
                {
                    <tr>
                        <td>@p.Id</td>
                        <td>
                            @{
                                var author = await UserService.GetById(p.UserId);
                                var postExists = await PostService.GetById(p.Id) != null;
                            }
                            @if (author != null)
                            {
                                <a asp-controller="Profile" asp-action="Index" asp-route-id="@author.Id">
                                   @author.UserName
                                </a>
                            }
                            else
                            {
                                <span>[Unknown]</span>
                            }
                        </td>
                        <td>
                            @if (postExists)
                            {
                                <a asp-controller="Newsfeed" asp-action="Details" asp-route-id="@p.Id">
                                    @(p.Content.Length > 50
                                        ? p.Content.Substring(0, 50) + "…"
                                        : p.Content)
                                </a>
                            }
                            else
                            {
                                <span>
                                    @(p.Content.Length > 50
                                        ? p.Content.Substring(0, 50) + "…"
                                        : p.Content)
                                </span>
                            }
                        </td>
                        <td>
                            <form asp-controller="Admin" asp-action="DeletePost" method="post"
                                  onsubmit="return confirm('Delete post #' + @p.Id + '?');">
                                <input name="id" type="hidden" value="@p.Id" />
                                <button class="btn btn-sm btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="tab-pane fade" id="reports">
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Post</th>
                    <th>Reporter</th>
                    <th>Reason</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var r in reports)
                {
                    var reporter = await UserService.GetById(r.ReporterId);
                    var postExists = await PostService.GetById(r.PostId) != null;
                    <tr>
                        <td>@r.Id</td>
                        <td>
                            @if (postExists)
                            {
                                <a asp-controller="Newsfeed" asp-action="Details" asp-route-id="@r.PostId">
                                    #@r.PostId
                                </a>
                            }
                            else
                            {
                                <span>#@r.PostId</span>
                            }
                        </td>
                        <td>
                            @if (reporter != null)
                            {
                                <a asp-controller="Profile" asp-action="Index" asp-route-id="@reporter.Id">
                                    @reporter.UserName
                                </a>
                            }
                            else
                            {
                                <span>[Unknown]</span>
                            }
                        </td>
                        <td>@r.Reason</td>
                        <td>
                            <form asp-controller="Admin" asp-action="DeleteReport" method="post"
                                  onsubmit="return confirm('Remove report #' + @r.Id + '?');">
                                <input name="id" type="hidden" value="@r.Id" />
                                <button class="btn btn-sm btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        var trigger = document.querySelector('#adminTabs button.active');
        bootstrap.Tab.getInstance(trigger)?.show();

        // Row click handler
        document.querySelectorAll('tr[data-href]').forEach(row => {
            row.addEventListener('click', (e) => {
                if (!e.target.closest('button')) {
                    window.location.href = row.dataset.href;
                }
            });
        });

        // Dynamic card animations
        const cards = document.querySelectorAll('.card');
        cards.forEach(card => {
            card.addEventListener('mousemove', (e) => {
                const rect = card.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                card.style.transform = `
                    perspective(1000px)
                    rotateX(${(y - rect.height/2) / 15}deg)
                    rotateY(${-(x - rect.width/2) / 15}deg)
                `;
            });

            card.addEventListener('mouseleave', () => {
                card.style.transform = 'none';
            });
        });
    </script>
}